set(LIB_MAJOR_VERSION "31")
set(LIB_VERSION_STRING "${LIB_MAJOR_VERSION}")

if (CMAKE_VERSION VERSION_LESS 3.0)
  project(lib
 android-support LANGUAGES C CXX ASM)
else()
  cmake_policy(SET CMP0048 NEW)
  project(libandroid-support VERSION "${LIB_VERSION_STRING}" LANGUAGES C CXX ASM)
endif()

cmake_policy(SET CMP0012 NEW)

macro(install_symlink filepath sympath)
    install(CODE "execute_process(COMMAND ${CMAKE_COMMAND} -E create_symlink ${filepath} ${sympath})")
    install(CODE "message(\"-- Created symlink: ${sympath} -> ${filepath}\")")
endmacro(install_symlink)

option(ENABLE_LIBC "Compile additional libc functionality" OFF)
option(ENABLE_LIBM "Compile additional libm functionality" OFF)
option(ENABLE_MUSL_CTYPE "Compile musl-ctype" ON)
option(ENABLE_MUSL_MULTIBYTE "Compile musl-multibyte" ON)
option(BUILD_SHARED_LIBS "Build shared library" ON)
option(BUILD_STATIC_LIBS "Build static library" ON)
option(USE_STATIC_LIBCXX "Link libc++ statically" OFF)

set(LIBANDROID_SUPPORT_OBJECTS)
if(ENABLE_LIBC)
    add_subdirectory(src/libc)
endif()
if(ENABLE_LIBM)
    add_subdirectory(src/libm)
endif()
if(ENABLE_MUSL_CTYPE)
    add_subdirectory(src/musl-ctype)
endif()
if(ENABLE_MUSL_MULTIBYTE)
    add_subdirectory(src/musl-multibyte)
endif()

if(USE_STATIC_LIBCXX)
    set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -stdlib=libc++ -static-libstdc++")
endif()

if(BUILD_SHARED_LIBS)
    add_library(libandroid-support SHARED ${LIBANDROID_SUPPORT_OBJECTS})
    set_target_properties(libandroid-support PROPERTIES PREFIX "")
    install(TARGETS libandroid-support LIBRARY DESTINATION lib)
    install_symlink(libandroid-support.so "${CMAKE_INSTALL_PREFIX}/lib/libutil.so")
endif()
if(BUILD_STATIC_LIBS)
    add_library(libandroid-support-static STATIC ${LIBANDROID_SUPPORT_OBJECTS})
    set_target_properties(libandroid-support-static PROPERTIES OUTPUT_NAME "android-support")
    install(TARGETS libandroid-support-static ARCHIVE DESTINATION lib)
    install_symlink(libandroid-support.a "${CMAKE_INSTALL_PREFIX}/lib/libutil.a")
endif()
